{"version":3,"file":"static/js/movies-page.eddbe3d5.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","services/fetchMovies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/MoviesPage/MoviesPage.styled.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  background-color: #e9def0;\n  padding-top: 48px;\n  margin: 0;\n`;\n\nexport const StyleLink = styled(Link)`\n  display: block;\n  color: black;\n  font-size: 16px;\n  font-weight: 400;\n  border-bottom: 2px solid transparent;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: #806d8c;\n  }\n`;\n\nexport const Li = styled.li`\n  margin-right: 16px;\n  text-align: center;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  border-radius: 4px;\n  margin-bottom: 12px;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n  }\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 100%;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyleLink, Li, Img, Ul } from './MovieList.styled';\nimport notfound from '../../images/notfound.png';\n\nexport default function MovieList({ movies }) {\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    if (query) {\n      setQuery(query);\n    }\n  }, [query]);\n\n  return (\n    <>\n      {movies && (\n        <Ul>\n          {movies.map(({ id, title, name, poster_path }) => {\n            const poster = `https://image.tmdb.org/t/p/w342${poster_path}`;\n            return (\n              <Li key={id}>\n                <StyleLink to={`/movies/${id}`} state={{ from: location }}>\n                  <Img src={poster_path ? poster : notfound} alt={name} />{' '}\n                  {title ? title : name}\n                </StyleLink>\n              </Li>\n            );\n          })}\n        </Ul>\n      )}\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n","import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 4px;\n  font-size: 16px;\n  width: 100px;\n  margin-left: 12px;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 4px;\n  &:hover {\n    background-color: #806d8c;\n    border-radius: 4px;\n    color: #310649;\n  }\n`;\nexport const Form = styled.form`\n  position: absolute;\n  border-top: none;\n  display: flex;\n  width: 100%;\n  padding-left: 20px;\n  margin-top: 10px;\n  color: white;\n`;\n\nexport const MovieCont = styled.div`\n  background-color: grey;\n  width: 100%;\n`;\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border-top: none;\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport MovieList from '../../components/MovieList/MovieList';\nimport api from '../../services/fetchMovies';\nimport { Button, Form, MovieCont } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const { location } = useLocation();\n  const [query, setQuery] = useState('');\n  const [movies, setMovie] = useState([]);\n  const history = createBrowserHistory({ window });\n  const [params, setParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = params.get('query');\n    if (query) {\n      setQuery(query);\n      api.fetchMoviesName(query).then(films => setMovie(films));\n    }\n  }, [params]);\n\n  function onFindMovies(event) {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return;\n    }\n\n    const inputValue = query;\n    api.fetchMoviesName(inputValue).then(films => setMovie(films));\n    setParams(`query=${query}`);\n\n    history.push({\n      ...location,\n      search: `?query=${query}`,\n    });\n  }\n\n  function onHandleChange(event) {\n    setQuery(event.target.value.toLowerCase());\n  }\n\n  return (\n    <>\n      <MovieCont>\n        <Form onSubmit={onFindMovies}>\n          <input\n            type=\"text\"\n            value={query}\n            name=\"name\"\n            onChange={onHandleChange}\n            autoComplete=\"on\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </MovieCont>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n}\n\nMoviesPage.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"names":["Ul","styled","StyleLink","Link","Li","Img","MovieList","movies","useState","query","setQuery","location","useLocation","console","log","useEffect","map","id","title","name","poster_path","poster","to","state","from","src","notfound","alt","API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Button","Form","MovieCont","MoviesPage","setMovie","history","createBrowserHistory","window","useSearchParams","params","setParams","get","api","then","films","onSubmit","event","preventDefault","trim","search","type","onChange","toLowerCase","autoComplete","autoFocus","placeholder"],"sourceRoot":""}
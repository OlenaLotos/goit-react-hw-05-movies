{"version":3,"file":"static/js/movie-details-page.5c3620aa.chunk.js","mappings":"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","sources":["services/fetchMovies.jsx","views/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1abcab100520369e11a771de2f4e2532';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nconst fetchMoviesName = async inputValue => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${inputValue}`\n  );\n  return data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nconst fetchFilmCasts = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchFilmReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst fetches = {\n  fetchPopularMovies,\n  fetchMoviesName,\n  fetchMovieById,\n  fetchFilmCasts,\n  fetchFilmReviews,\n};\nexport default fetches;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  position: absolute;\n  padding: 4px;\n  font-size: 16px;\n  width: 100px;\n  margin-left: 12px;\n  margin-bottom: 16px;\n  margin-top: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 4px;\n  &:hover {\n    background-color: #806d8c;\n    border-radius: 4px;\n    color: #310649;\n  }\n`;\n\nexport const MovieCont = styled.div`\n  display: flex;\n  background-color: #e9def0;\n  color: black;\n`;\n\nexport const MovieAbout = styled.div`\n  margin-left: 20px;\n  margin-top: 16px;\n`;\n\nexport const MovieGenres = styled.div`\n  display: flex;\n`;\n\nexport const MovieGenresP = styled.p`\n  margin-right: 16px;\n  font-weight: 400;\n  margin-top: 0;\n`;\nexport const MenuUl = styled.ul`\n  display: flex;\n  list-style: none;\n  border-bottom: 1px solid grey;\n  padding-bottom: 30px;\n  margin-top: 16px;\n  padding-top: 12px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n\nexport const Links = styled.div`\n  background-color: #806d8c;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const StyleLink = styled(Link)`\n  padding-bottom: 12px;\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 3px solid transparent;\n\n  text-decoration: none;\n  list-style: none;\n  margin-right: 20px;\n  &:active {\n    color: #806d8c;\n  }\n  &:hover {\n    cursor: pointer;\n    color: #e9def0;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  margin-left: 20px;\n  margin-top: 40px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n","import { useEffect, useState, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useParams,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport {\n  Button,\n  MovieAbout,\n  MovieCont,\n  MovieGenres,\n  MovieGenresP,\n  MenuUl,\n  Links,\n  StyleLink,\n  Img,\n} from './MovieDetailsPage.styled';\nimport api from '../../services/fetchMovies';\n\nconst Casts = lazy(() => import('../../components/Casts/Casts'));\n\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState({});\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  const location = useLocation();\n  const { movieId } = useParams();\n  const poster = `https://image.tmdb.org/t/p/w300${poster_path}`;\n  const [page] = useState(location.state.from);\n  let navigate = useNavigate();\n\n  function buttonBack() {\n    navigate(page);\n  }\n\n  useEffect(() => {\n    api.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <MovieCont>\n        <Button type=\"button\" onClick={buttonBack}>\n          Go back\n        </Button>\n        <Img src={poster_path && poster} alt={title} />\n        <MovieAbout>\n          <h2>{title}</h2>\n          <p>User Score: {((vote_average * 100) / 10).toFixed()}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <MovieGenres>\n            {genres &&\n              genres.map(genre => (\n                <MovieGenresP key={genre.id}>{genre.name}</MovieGenresP>\n              ))}\n          </MovieGenres>\n        </MovieAbout>\n      </MovieCont>\n      <Links>\n        <MenuUl>\n          <li>\n            <StyleLink to={`cast`} state={{ from: location }}>\n              Cast\n            </StyleLink>\n          </li>\n          <li>\n            <StyleLink to={`reviews`} state={{ from: location }}>\n              Reviews\n            </StyleLink>\n          </li>\n        </MenuUl>\n      </Links>\n      <Suspense fallback={<div>Loading...Please wait..</div>}></Suspense>\n      <Routes>\n        <Route path=\"/cast\" exact element={<Casts />} />\n        <Route path=\"/reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n\nMovieDetailsPage.propTypes = {\n  onClick: PropTypes.func,\n};\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchMoviesName","inputValue","fetchMovieById","movieId","response","fetchFilmCasts","cast","fetchFilmReviews","fetches","Button","styled","MovieCont","MovieAbout","MovieGenres","MovieGenresP","MenuUl","Links","StyleLink","Link","Img","Casts","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","title","vote_average","overview","genres","poster_path","location","useLocation","useParams","poster","state","from","page","navigate","useNavigate","useEffect","api","then","type","onClick","src","alt","toFixed","map","genre","name","id","to","Suspense","fallback","path","exact","element"],"sourceRoot":""}
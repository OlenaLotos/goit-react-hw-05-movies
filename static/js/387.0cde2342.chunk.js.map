{"version":3,"file":"static/js/387.0cde2342.chunk.js","mappings":"0PAEaA,EAAKC,EAAAA,GAAAA,GAAH,uHAOFC,EAAMD,EAAAA,GAAAA,IAAH,gEAKHE,EAAOF,EAAAA,GAAAA,GAAH,+OAUJG,EAAOH,EAAAA,GAAAA,EAAH,8J,mBClBF,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,iBAAqBH,GAASI,KAAKL,EACpC,GAAE,CAACC,KAGF,8BACGF,EAAQO,OAAS,GAChB,SAACd,EAAD,UACGO,EAAQQ,KAAI,SAAAC,GACX,IAAMC,EAASD,EAAKE,eAAeC,YAAYC,MAAM,GACrD,OACE,UAACjB,EAAD,YACE,SAACD,EAAD,CAAKmB,IAAKJ,GAAkBK,EAAUC,IAAKP,EAAKQ,UAChD,wBAAKR,EAAKQ,UACV,uBAAIR,EAAKS,YAHAT,EAAKU,GAMnB,OAGH,SAACtB,EAAD,oEAIP,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: inline-block;\n  background-color: #e9def0;\n  margin-top: 0;\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  border-radius: 4px;\n`;\n\nexport const List = styled.li`\n  display: inline-block;\n  padding: 20px;\n  margin-right: 15px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  border-radius: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const Text = styled.p`\n  margin-left: 20px;\n  background-color: #e9def0;\n  margin: 0;\n  font-size: 20px;\n  padding-left: 20px;\n  padding-bottom: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/fetchMovies';\nimport { Ul, Img, List, Text } from './Reviews.styled';\nimport notfound from '../../images/notfound.png';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.fetchFilmReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Ul>\n          {reviews.map(item => {\n            const avatar = item.author_details.avatar_path.slice(1);\n            return (\n              <List key={item.id}>\n                <Img src={avatar ? avatar : notfound} alt={item.author} />\n                <h3>{item.author}</h3>\n                <p>{item.content}</p>\n              </List>\n            );\n          })}\n        </Ul>\n      ) : (\n        <Text>Sorry, but we don't have any reviews for this movie!</Text>\n      )}\n    </>\n  );\n}\n"],"names":["Ul","styled","Img","List","Text","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","api","then","length","map","item","avatar","author_details","avatar_path","slice","src","notfound","alt","author","content","id"],"sourceRoot":""}